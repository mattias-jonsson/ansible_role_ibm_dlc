---

- name: Assert that role is executed on a supported Operating System
  ansible.builtin.assert:
    that:
      - ansible_os_family == 'RedHat'
      - ansible_distribution_major_version | int >= 7
      - ansible_distribution_major_version | int <= 9
      - ibm_dlc_installer_sha256sum[ibm_dlc_installer | basename] is defined
    msg: "{{ checksum_msg if ibm_dlc_installer_sha256sum[ibm_dlc_installer | basename] is not defined else os_msg }}"
    quiet: true
  vars:
    os_msg: "{{ ansible_distribution }} version {{ ansible_distribution_major_version }} is not a supported Operating System for this role."
    checksum_msg: "Unable to find checksum for {{ ibm_dlc_installer | basename }}, please verify and update the ibm_dlc_installer_sha256sum variable."

- name: Check installed IBM DLC version
  ansible.builtin.yum:
    list: dlc-service
  register: package_check_result

- name: Set installed version and release.
  ansible.builtin.set_fact:
    installed_dlc_version: "{{ package_check_result.results[0].version | default('1.0.0') }}-{{ package_check_result.results[0].release | default('1') }}"

- name: Include install tasks.
  ansible.builtin.include_tasks:
    file: install.yml
  when:
    - ibm_dlc_version is version(installed_dlc_version, operator='gt', version_type='semver')

- name: Include configure tasks
  ansible.builtin.include_tasks:
    file: configure.yml

- name: Find IBM DLC instance file.
  become: true
  ansible.builtin.find:
    paths: /etc/dlc/instance
    file_type: file
    patterns: '[a-z0-9-]+'
    use_regex: true
  register: ibm_dlc_instance_file_search

- name: Block for IBM DLC instance ID
  block:
    - name: Set fact for DLC instance ID
      ansible.builtin.set_fact:
        ibm_dlc_instance_id: '{{ ibm_dlc_instance_file_search.files[0].path | basename }}'

    - name: Print IBM DLC Instance ID.
      ansible.builtin.debug:
        msg: 'The DLC Instance ID: {{ ibm_dlc_instance_id }}'
  when:
    - ibm_dlc_print_instanceid
    - ibm_dlc_instance_file_search.matched == 1
